class CreateEvents < ActiveRecord::Migration 
  def self.up
    create_table :call_events, :force => true do |t|
      t.string  "name"
      t.string  "account"
      t.string  "accountcode"
      t.string  "acl"
      t.string  "action"
      t.string  "address-ip"
      t.string  "address-port"
      t.string  "agent"
      t.string  "amaflags"
      t.string  "answertime"
      t.string  "append"
      t.string  "appdata"
      t.string  "application"
      t.string  "async"
      t.string  "authtype"
      t.string  "billableseconds"
      t.string  "callerid"
      t.string  "callierid1"
      t.string  "callerid2"
      t.string  "calleridnum"
      t.string  "calleridname"
      t.string  "callgroup"
      t.string  "callstaken"
      t.string "cid-callingpres"
      t.string  "cause"
      t.string  "cause-txt"
      t.string  "channel"
      t.string  "channel1"
      t.string  "channel2"
      t.string  "channeltype"
      t.string  "chanobjecttype"
      t.string  "codecs"
      t.string  "codecsorder"
      t.string  "command"
      t.string  "context"
      t.string  "count"
      t.string  "data"
      t.string  "default-addr-ip"
      t.string  "default-username"
      t.string  "destination"
      t.string  "destinationcontext"
      t.string  "destinationchannel"
      t.string  "destuniqueid"
      t.string  "disposition"
      t.string  "domain"
      t.string  "duration"
      t.string  "dynamic"
      t.string  "endtime"
      t.string  "eventlist"
      t.string  "events"
      t.string  "exten"
      t.string  "extension"
      t.string  "family"
      t.string  "file"
      t.string  "format"
      t.string  "from"
      t.string  "hint"
      t.string  "incominglimit"
      t.string  "key"
      t.string  "lastapplication"
      t.string  "lastcall"
      t.string  "lastdata"
      t.string  "link"
      t.string  "listitems"
      t.string  "location"
      t.string  "loginchan"
      t.string  "logintime"
      t.string  "mailbox"
      t.string  "md5secretexists"
      t.string  "membership"
      t.string  "message"
      t.string  "mix"
      t.string  "newmessages"
      t.string  "newname"
      t.string  "objectname"
      t.string  "oldname"
      t.string  "oldmessages"
      t.string  "outgoinglimit"
      t.string  "paused"
      t.string  "peer"
      t.string  "peerstatus"
      t.string  "penalty"
      t.string  "priority"
      t.string  "privilege"
      t.string  "pickupgroup"
      t.string  "position"
      t.string  "queue"
      t.string  "reason"
      t.string  "response"
      t.string  "restart"
      t.string  "regexpire"
      t.string  "regexpiry"
      t.string  "reason"
      t.string  "seconds"
      t.string  "secret"
      t.string  "secretexist"
      t.string  "shutdown"
      t.string  "sip-authinsecure"
      t.string  "sip-fromdomain"
      t.string  "sip-fromuser"
      t.string  "sip-natsupport"
      t.string  "siplastmsg"
      t.string  "source"
      t.string  "srcuniqueid"
      t.string  "starttime"
      t.string  "state"
      t.string  "status"
      t.string  "time"
      t.string  "timeout"
      t.string  "uniqueid"
      t.string  "uniqueid1"
      t.string  "uniqueid2"
      t.string  "user"
      t.string  "userfield"
      t.string  "val"
      t.string  "variable"
      t.string  "value"
      t.string  "voicemailbox"
      t.string  "waiting"
      t.string  "uniqueid"
      t.string  "userevent"
      t.timestamps
    end
  
    create_table :asterisk_events, :force => true do |t|
      t.string  "name"
      t.string  "channel"
      t.string  "message"
      t.string  "peer_count"
      t.string  "privilege"
      t.string  "registry_count"
      t.string  "reloadreason"
      t.string  "shutdown"
      t.string  "user_count"
      t.timestamps
    end
  end
  
  def self.down
    drop_table :call_events
    drop_table :asterisk_events
  end
end